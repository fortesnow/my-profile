'use client';

import React from 'react';

interface PixelCharacterProps {
  type: string;
  selected?: boolean;
  small?: boolean;
}

// ピクセルアート用のデータ定義
const characterData = {
  fighter: {
    width: 16,
    height: 16,
    pixelSize: 4,
    palette: [
      "#00000000", "#2000b0", "#201f21", "#f58e22", "#d27721", "#b5571e",
      "#442a1f", "#200986", "#6e4421", "#ffd394", "#fff6c0",
      "#ffffff", "#f79a63", "#f21a13", "#ff1213", "#af210e", "#201651"
    ],
    data: [
      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,1,2,1,3,3,1,3,3,3,4,1,0,0,0],
      [0,0,1,2,2,2,2,2,2,2,3,3,4,5,6,0],
      [0,6,3,2,7,8,3,2,4,3,2,2,7,1,6,0],
      [0,6,3,7,1,9,4,2,2,4,3,2,2,1,6,0],
      [0,0,0,1,1,1,1,10,11,7,8,7,1,0,0,0],
      [0,0,0,0,1,9,7,10,11,8,9,1,1,0,0,0],
      [0,6,12,13,14,9,9,1,13,14,13,13,10,12,7,0],
      [0,0,1,14,13,13,1,13,13,12,10,1,8,1,6,0],
      [0,6,14,1,12,12,14,12,12,14,1,5,12,8,7,0],
      [15,7,9,11,1,14,1,14,14,1,9,9,8,14,5,0],
      [15,7,8,7,1,1,11,4,4,1,8,8,11,6,0,0],
      [0,6,1,0,0,1,12,1,9,8,1,1,1,0,0,0],
      [0,0,0,0,0,0,0,1,13,13,13,13,1,0,0,0],
      [0,0,0,0,0,0,0,1,12,12,14,14,1,0,0,0],
      [0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0]
    ]
  },
  monk: {
    width: 16,
    height: 16,
    pixelSize: 4,
    palette: [
      "#00000000", "#2000b0", "#8a6b19", "#212121", "#aa7424", "#654b0e",
      "#bf9242", "#63c2ff", "#ffffc8", "#f9b368", "#f5f5f5",
      "#ffe6a0", "#b3a98c", "#c3c3c3", "#1f0e70", "#a49704", "#597186"
    ],
    data: [
      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,0,1,1,2,1,3,3,3,2,2,4,2,0,0],
      [0,2,3,2,5,3,3,5,3,1,3,4,2,3,2,0],
      [0,0,2,5,4,6,6,5,3,1,6,3,3,1,2,0],
      [0,0,2,1,2,7,8,2,3,4,1,4,2,2,0,0],
      [0,0,0,0,2,7,4,9,1,10,4,4,2,0,0,0],
      [0,0,0,0,2,7,7,10,8,7,2,2,2,2,0,0],
      [0,0,2,9,11,2,10,10,2,1,12,12,9,9,9,13],
      [0,0,0,2,2,1,2,2,14,14,12,9,2,2,2,0],
      [0,13,4,2,1,14,5,14,14,14,15,4,5,7,11,13],
      [0,7,7,8,2,1,2,1,1,2,7,10,14,1,10,13],
      [0,10,10,1,13,13,15,15,15,2,10,10,4,4,13,0],
      [0,2,2,0,0,0,2,6,7,10,2,2,0,0,0,0],
      [0,0,0,0,0,0,0,2,14,14,1,2,0,0,0,0],
      [0,0,0,0,0,0,2,14,14,14,14,2,0,0,0,0],
      [0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0]
    ]
  },
  whitemage: {
    width: 16,
    height: 16,
    pixelSize: 4,
    palette: [
      "#00000000", "#2000b0", "#202020", "#fffffe", "#9b9c9d", "#3a332c",
      "#954e0c", "#762d1d", "#f0b576", "#faf4da", "#6c6d73",
      "#e5d6bc", "#ef7b5c", "#907d61", "#1f0b7b", "#ff1413", "#e20202"
    ],
    data: [
      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0],
      [0,0,0,0,1,2,2,2,2,2,2,2,1,1,0,0],
      [0,0,0,1,2,1,1,1,3,2,2,2,2,1,0,0],
      [0,1,2,4,5,6,7,5,5,4,2,2,2,2,8,0],
      [0,1,2,1,5,1,9,4,1,6,1,2,2,2,2,0],
      [0,1,2,1,4,2,9,8,3,10,11,1,2,2,2,0],
      [0,0,1,2,1,10,8,8,8,7,1,1,2,2,1,0],
      [0,0,0,1,2,12,12,12,12,3,3,2,3,13,0,0],
      [0,0,0,1,2,2,2,2,2,2,2,2,2,1,0,0],
      [0,13,6,9,1,8,2,2,8,6,9,9,2,2,1,0],
      [0,1,14,14,1,2,2,2,3,14,14,14,2,2,1,0],
      [0,1,14,2,1,2,2,2,3,14,2,2,2,2,1,0],
      [0,1,15,2,1,2,2,2,3,14,14,14,2,2,1,0],
      [0,0,1,15,1,14,11,14,15,1,14,2,14,14,2,0],
      [0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0]
    ]
  },
  blackmage: {
    width: 16,
    height: 16,
    pixelSize: 4,
    palette: [
      "#00000000", "#2000b0", "#212121", "#fcf103", "#1f0f6c", "#c3ab0a",
      "#e0cc06", "#a78a0d", "#866711", "#1f0498", "#096bd5",
      "#085095", "#188eff", "#8c8360", "#ffe495", "#0d78f0", "#0f67c9"
    ],
    data: [
      [0,0,0,0,0,0,0,0,0,0,0,1,1,2,1,3],
      [0,0,0,0,0,0,0,0,0,0,1,2,2,4,1,3],
      [0,0,0,0,0,0,1,1,2,2,5,4,6,7,8,0],
      [0,3,1,1,1,1,2,2,5,5,4,6,7,1,0,0],
      [0,3,1,4,5,5,5,5,4,6,7,7,1,0,0,0],
      [0,0,0,1,1,6,4,5,5,4,6,7,1,0,0,0],
      [0,0,0,0,1,4,1,1,1,1,6,4,4,7,8,0],
      [0,0,0,1,1,2,1,1,4,1,1,1,7,6,1,3],
      [0,0,0,9,1,1,1,1,2,1,1,1,1,10,1,3],
      [0,3,1,11,11,11,11,11,11,11,11,9,10,1,0,0],
      [0,12,13,1,9,14,11,11,9,9,9,9,9,10,8,0],
      [0,10,14,1,14,11,11,1,13,13,10,11,11,15,8,0],
      [0,10,11,1,14,11,11,1,13,13,10,11,11,15,8,0],
      [0,3,1,1,14,11,11,14,9,1,10,11,11,15,8,0],
      [0,3,1,1,14,11,11,14,9,1,10,11,11,15,8,0],
      [0,0,0,1,1,1,1,1,1,1,1,1,1,1,8,0]
    ]
  }
};

export const PixelCharacter: React.FC<PixelCharacterProps> = ({ 
  type, 
  selected = false,
  small = false 
}) => {
  // 存在しないキャラクタータイプの場合はデフォルトにフォールバック
  const charData = characterData[type as keyof typeof characterData] || characterData.fighter;
  
  // 表示サイズを設定
  const displaySize = small ? 24 : 48;
  
  // 選択枠のスタイル
  const selectionStyle = selected ? {
    border: '2px solid #FFCC00',
    boxShadow: '0 0 5px rgba(255, 204, 0, 0.7)',
    backgroundColor: 'rgba(255, 204, 0, 0.1)'
  } : {
    border: '2px solid transparent'
  };
  
  return (
    <div style={{
      width: `${displaySize}px`,
      height: `${displaySize}px`,
      borderRadius: '4px',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      ...selectionStyle
    }}>
      <svg
        width={displaySize * 0.8}
        height={displaySize * 0.8}
        viewBox={`0 0 ${charData.width * charData.pixelSize} ${charData.height * charData.pixelSize}`}
        style={{
          imageRendering: 'pixelated'
        }}
      >
        {charData.data.map((row, y) =>
          row.map((colorIndex, x) => {
            // 透明ピクセルはスキップ
            if (colorIndex === 0) return null;

            return (
              <rect
                key={`${x}-${y}`}
                x={x * charData.pixelSize}
                y={y * charData.pixelSize}
                width={charData.pixelSize}
                height={charData.pixelSize}
                fill={charData.palette[colorIndex]}
              />
            );
          })
        )}
      </svg>
    </div>
  );
}; 